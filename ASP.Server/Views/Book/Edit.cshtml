@using ASP.Server.Controllers
@model BookModel
@{
    ViewBag.Title = "Edit";
}
<style>
    /*
    body {
  align-items: center;
  background-color: #000;
  display: flex;
  justify-content: center;
  height: 100vh;
}*/

.form {
  background: #324960;
  border-radius: 20px;
  box-sizing: border-box;
  height: 600px;
  padding:10px;
  margin-left:20%;
  width: 60%;
}

.title {
  color: #eee;
  font-family: sans-serif;
  font-size: 36px;
  font-weight: 600;
  margin-top: 20px;
}

.subtitle {
  color: #eee;
  font-family: sans-serif;
  font-size: 16px;
  font-weight: 600;
  margin-top: 10px;
}

.input-container {
  height: 50px;
  position: relative;
  width: 100%;
}

.ic1 {
  margin-top: 32px;
  
}

.ic2 {
  margin-top: 15px;
  
}

.input {
  background-color: #303245;
  border-radius: 12px;
  border: 0;
  box-sizing: border-box;
  color: #eee;
  font-size: 18px;
  height: 100%;
  outline: 0;
  padding: 4px 20px 0;
  width: 100%;
}

.cut {
  background-color: #15172b;
  border-radius: 10px;
  height: 20px;
  left: 20px;
  position: absolute;
  top: -20px;
  transform: translateY(0);
  transition: transform 200ms;
  width: 76px;
}

.cut-short {
  width: 50px;
}

.input:focus ~ .cut,
.input:not(:placeholder-shown) ~ .cut {
  transform: translateY(8px);
}

.placeholder {
  color: #65657b;
  font-family: sans-serif;
  left: 20px;
  line-height: 14px;
  pointer-events: none;
  position: absolute;
  transform-origin: 0 50%;
  transition: transform 200ms, color 200ms;
  top: 20px;
}

.input:focus ~ .placeholder,
.input:not(:placeholder-shown) ~ .placeholder {
  transform: translateY(-30px) translateX(10px) scale(0.75);
}

.input:not(:placeholder-shown) ~ .placeholder {
  color: #808097;
}

.input:focus ~ .placeholder {
  color: #dc2f55;
}

.submit {
   background: #4FC3A1;
  border-radius: 12px;
  border: 0;
  box-sizing: border-box;
  color: #eee;
  cursor: pointer;
  font-size: 18px;
  height: 50px;
  margin-top: 38px;
  // outline: 0;
  text-align: center;
  width: 47%;
  float:left;
  
}
.textColor{
    color : white;
}
.cancel {
   background: #d63031;
  border-radius: 12px;
  border: 0;
  box-sizing: border-box;
  color: #eee;
  cursor: pointer;
  font-size: 18px;
  height: 50px;
  margin-top: 38px;
  // outline: 0;
  text-align: center;
  width: 47%;
  float:right;
  padding-top:10px;
  text-decoration-style:none;
}

.margin-top{
    margin-top:30px;
}

.submit:active {
  background-color: #06b;
}
    /***/
.input-group {
    margin-top:10px;
    display:flex;
    justify-content:space-between;
    flex-wrap:wrap;
}
input, textarea, select {
    flex-basis:85%;
}
label {
    flex-basis:10%;
}
</style>

<!-- Voici une facon de faire, mais ce n'est pas la seul, a vous de jouer ! -->

    @Html.AntiForgeryToken()
    
     <form asp-action="Edit" class="form">
       <div class="title">Edit Book!</div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="input-container ic1">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "textColor" })
            <div class="">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-container ic1">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "textColor" })
                <div class="">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "input" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

             <div class="input-container ic1">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "textColor" })
                <div class="">
                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "input" } })
                    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                </div>

             </div>

            <div class="input-container ic1">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "textColor" })
                <div class="">
                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "input" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="margin-top">
                <div >
                    <input type="submit" value="Save" class="submit" />
                </div>
            </div>

            <div class="margin-top">
                <div class="cancel" >
                  @Html.ActionLink("Annuler", "List")
                </div>
            </div>
    </form>


